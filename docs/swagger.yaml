definitions:
  controllers.Block:
    properties:
      difficulty:
        type: string
      gasLimit:
        type: integer
      gasUsed:
        type: integer
      miner:
        type: string
      nonce:
        type: integer
      number:
        type: string
      parentHash:
        type: string
      sha3Uncles:
        type: string
      timestamp:
        type: integer
      transactions:
        type: integer
    type: object
  controllers.JSONResult:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  controllers.Node:
    properties:
      address:
        description: 地址
        type: string
      chain_id:
        description: 链id
        type: integer
      chain_name:
        type: string
      description:
        type: string
      is_https:
        type: boolean
      name:
        type: string
      network_id:
        type: integer
      port:
        description: 端口
        type: integer
      user_id:
        type: integer
    required:
    - address
    - chain_id
    - name
    - port
    type: object
  controllers.Transaction:
    properties:
      from:
        type: string
      gas:
        type: integer
      gasPrice:
        type: string
      hash:
        type: string
      input:
        items:
          type: integer
        type: array
      nonce:
        type: integer
      to:
        type: string
      value:
        type: string
    type: object
  controllers.TransactionReceipt:
    properties:
      blockHash:
        type: string
      blockNumber:
        type: string
      contractAddress:
        type: string
      cumulativeGasUsed:
        type: integer
      gas:
        type: integer
      gasPrice:
        type: string
      gasUsed:
        type: integer
      input:
        type: string
      nonce:
        type: integer
      root:
        items:
          type: integer
        type: array
      status:
        type: string
      to:
        type: string
      transactionHash:
        type: string
      transactionIndex:
        type: integer
      value:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /block/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.Block'
                  type: array
              type: object
      summary: 分页获取区块列表
      tags:
      - block
  /block/transaction/{hash}:
    get:
      consumes:
      - application/json
      parameters:
      - description: tx hash
        in: query
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/controllers.TransactionReceipt'
              type: object
      summary: 交易详情
      tags:
      - block
  /block/transaction/{number}:
    get:
      consumes:
      - application/json
      parameters:
      - description: blockNumber
        in: query
        name: number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/controllers.Transaction'
              type: object
      summary: 分页列表
      tags:
      - block
  /node:
    post:
      consumes:
      - application/json
      parameters:
      - description: 关联链Id
        in: body
        name: chain_id
        required: true
        schema:
          type: integer
      - description: 节点地址
        in: body
        name: address
        required: true
        schema:
          type: string
      - description: 端口
        in: body
        name: port
        required: true
        schema:
          type: integer
      - description: 名称
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: NodeId
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  type: integer
              type: object
      security:
      - ApiKeyAuth: []
      summary: 添加node
      tags:
      - node
  /node/change:
    post:
      consumes:
      - application/json
      parameters:
      - description: 关联链Id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: 端口
        in: body
        name: node_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 切换node
      tags:
      - node
  /node/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.Node'
                  type: array
              type: object
      summary: 节点列表
      tags:
      - node
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"token": token, "user_id": loadUser.ID}'
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: 用户登录
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: 密码
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":"用户Id"}'
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResult'
            - properties:
                data:
                  type: integer
              type: object
      summary: 用户注册
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
